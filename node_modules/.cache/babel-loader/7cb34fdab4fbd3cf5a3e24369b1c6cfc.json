{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ZUL\\\\Desktop\\\\syifaProject\\\\build-a-website-2\\\\src\\\\containers\\\\Details.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport WeatherImage from \"../components/WeatherImage\";\nimport \"../App.css\"; // TODO\n// - implement API\n// - add props to details screen\n// - style the details screen\n\nfunction Details() {\n  _s();\n\n  const history = useHistory();\n  const [weatherData, setWeatherData] = useState(null);\n  const [city, setCity] = useState(\"Jakarta\");\n  useEffect(() => {\n    // console.log(process.env.REACT_APP_WEATHER_KEY);\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${process.env.REACT_APP_WEATHER_KEY}`).then(function (response) {\n      // Successful request\n      const weather = response.data;\n      setWeatherData(weather);\n    }).catch(function (error) {\n      // The best practice of coding is to not use console.log\n      console.log(error);\n    });\n  }, [city]);\n  useEffect(() => {\n    const searchParams = history.location.search;\n    const urlParams = new URLSearchParams(searchParams);\n    const city = urlParams.get(\"city\");\n\n    if (city) {\n      setCity(city);\n    }\n  }, [history]);\n  const {\n    cloudiness,\n    currentTemp,\n    highTemp,\n    humidity,\n    lowTemp,\n    weatherType,\n    windSpeed\n  } = useMemo(() => {\n    let cloudiness = \"\";\n    let currentTemp = \"\";\n    let highTemp = \"\";\n    let humidity = \"\";\n    let lowTemp = \"\";\n    let weatherType = \"\";\n    let windSpeed = \"\";\n\n    if (weatherData) {\n      cloudiness = `${weatherData.clouds.all}%`;\n      currentTemp = `${Math.round(weatherData.main.temp)}°C`;\n      highTemp = `${Math.round(weatherData.main.temp_max)}°C`;\n      humidity = `${weatherData.main.humidity}%`;\n      lowTemp = `${Math.round(weatherData.main.temp_min)}°C`;\n      weatherType = `${weatherData.weather[0].description}`;\n      windSpeed = `${weatherData.wind.speed} mph`;\n    }\n\n    return {\n      cloudiness,\n      currentTemp,\n      highTemp,\n      humidity,\n      lowTemp,\n      weatherType,\n      windSpeed\n    };\n  }, [weatherData]);\n  return (\n    /*#__PURE__*/\n    // Container\n    _jsxDEV(\"div\", {\n      className: \"flex flex-col items-center h-screen bg-green-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-8 text-2xl font-bold\",\n        children: [\" Weather in \", city, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col p-8 m-4 border-2 rounded-md border-gray-700 items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", weatherType, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this), \" \", \" \", /*#__PURE__*/_jsxDEV(WeatherImage, {\n          weatherType: weatherType,\n          className: \"weatherImg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 80\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" High Temperature: \", highTemp, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }, this), \" \", \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" Cloudiness: \", cloudiness, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 59\n      }, this), \" \", \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" Low Temperature: \", lowTemp, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 55\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" Humidity: \", humidity, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 52\n      }, this), \" \", \" \", \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" Wind Speed: \", windSpeed, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 95\n      }, this), \" \", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(Details, \"A3Vr6yG5VRKXmkn/Zv6am1SQx1U=\", false, function () {\n  return [useHistory];\n});\n\n_c = Details;\nexport default Details;\n\nvar _c;\n\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"sources":["C:/Users/ZUL/Desktop/syifaProject/build-a-website-2/src/containers/Details.js"],"names":["React","useState","useEffect","useMemo","useHistory","axios","WeatherImage","Details","history","weatherData","setWeatherData","city","setCity","get","process","env","REACT_APP_WEATHER_KEY","then","response","weather","data","catch","error","console","log","searchParams","location","search","urlParams","URLSearchParams","cloudiness","currentTemp","highTemp","humidity","lowTemp","weatherType","windSpeed","clouds","all","Math","round","main","temp","temp_max","temp_min","description","wind","speed"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport WeatherImage from \"../components/WeatherImage\";\r\nimport \"../App.css\";\r\n\r\n// TODO\r\n// - implement API\r\n// - add props to details screen\r\n// - style the details screen\r\n\r\nfunction Details() {\r\n    const history = useHistory();\r\n    const [weatherData, setWeatherData] = useState(null);\r\n    const [city, setCity] = useState(\"Jakarta\");\r\n\r\n    useEffect(() => {\r\n        // console.log(process.env.REACT_APP_WEATHER_KEY);\r\n        axios\r\n            .get(\r\n                `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${process.env.REACT_APP_WEATHER_KEY}`\r\n            )\r\n            .then(function(response) {\r\n                // Successful request\r\n                const weather = response.data;\r\n                setWeatherData(weather);\r\n            })\r\n            .catch(function(error) {\r\n                // The best practice of coding is to not use console.log\r\n                console.log(error);\r\n            });\r\n    }, [city]);\r\n\r\n    useEffect(() => {\r\n        const searchParams = history.location.search;\r\n        const urlParams = new URLSearchParams(searchParams);\r\n        const city = urlParams.get(\"city\");\r\n        if (city) {\r\n            setCity(city);\r\n        }\r\n    }, [history]);\r\n\r\n    const {\r\n        cloudiness,\r\n        currentTemp,\r\n        highTemp,\r\n        humidity,\r\n        lowTemp,\r\n        weatherType,\r\n        windSpeed,\r\n    } = useMemo(() => {\r\n        let cloudiness = \"\";\r\n        let currentTemp = \"\";\r\n        let highTemp = \"\";\r\n        let humidity = \"\";\r\n        let lowTemp = \"\";\r\n        let weatherType = \"\";\r\n        let windSpeed = \"\";\r\n\r\n        if (weatherData) {\r\n            cloudiness = `${weatherData.clouds.all}%`;\r\n            currentTemp = `${Math.round(weatherData.main.temp)}°C`;\r\n            highTemp = `${Math.round(weatherData.main.temp_max)}°C`;\r\n            humidity = `${weatherData.main.humidity}%`;\r\n            lowTemp = `${Math.round(weatherData.main.temp_min)}°C`;\r\n            weatherType = `${weatherData.weather[0].description}`;\r\n            windSpeed = `${weatherData.wind.speed} mph`;\r\n        }\r\n\r\n        return {\r\n            cloudiness,\r\n            currentTemp,\r\n            highTemp,\r\n            humidity,\r\n            lowTemp,\r\n            weatherType,\r\n            windSpeed,\r\n        };\r\n    }, [weatherData]);\r\n\r\n    return (\r\n        // Container\r\n        <\r\n        div className = \"flex flex-col items-center h-screen bg-green-200\" >\r\n        <\r\n        div className = \"p-8 text-2xl font-bold\" > Weather in { city } < /div> <\r\n        div className = \"flex flex-col p-8 m-4 border-2 rounded-md border-gray-700 items-center\" >\r\n        <\r\n        div > { weatherType } < /div>{\" \"} <\r\n        WeatherImage weatherType = { weatherType }\r\n        className = \"weatherImg\" / >\r\n        <\r\n        /div> <\r\n        div > High Temperature: { highTemp } < /div>{\" \"} <\r\n        div > Cloudiness: { cloudiness } < /div>{\" \"} <\r\n        div > Low Temperature: { lowTemp } < /div> <div> Humidity: {humidity} </div > { \" \" } <\r\n        div > Wind Speed: { windSpeed } < /div>{\" \"} <\r\n        /div>\r\n    );\r\n}\r\n\r\nexport default Details;"]},"metadata":{},"sourceType":"module"}