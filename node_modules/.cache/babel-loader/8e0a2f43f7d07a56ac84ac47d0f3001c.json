{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ZUL\\\\Desktop\\\\syifaProject\\\\build-a-website-2\\\\src\\\\containers\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\"; // import Header from \"../components/Header\";\n// import WeatherImage from \"../components/WeatherImage\";\n\nimport City from \"../components/City\";\n\nfunction Home() {\n  _s();\n\n  const history = useHistory();\n  const [weatherData, setWeatherData] = useState(null);\n  const [city, setCity] = useState(\"Jakarta\");\n  useEffect(() => {\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${process.env.REACT_APP_WEATHER_API}`).then(function (response) {\n      // Successful request\n      const weather = response.data;\n      setWeatherData(weather);\n    }).catch(function (error) {\n      // The best practice of coding is to not use console.log\n      console.warn(error);\n    });\n  }, [city]);\n  useEffect(() => {\n    const searchParams = history.location.search;\n    const urlParams = new URLSearchParams(searchParams);\n    const city = urlParams.get(\"city\");\n\n    if (city) {\n      setCity(city);\n    }\n  }, [history]);\n  const {\n    currentTemp\n  } = useMemo(() => {\n    let currentTemp = \"\";\n\n    if (weatherData) {\n      currentTemp = `${Math.round(weatherData.main.temp)}°C`;\n    }\n\n    return {\n      currentTemp\n    };\n  }, [weatherData]);\n  return (\n    /*#__PURE__*/\n    // Container\n    _jsxDEV(\"div\", {\n      className: \"flex flex-col h-screen bg-green-200 font\",\n      children: [/*#__PURE__*/_jsxDEV(City, {\n        cityName: city,\n        temp: currentTemp,\n        color: \"bg-yellow-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(Home, \"a9pd/Zsn/k4ydEPCD8vcLo7bZBk=\", false, function () {\n  return [useHistory];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/ZUL/Desktop/syifaProject/build-a-website-2/src/containers/Home.js"],"names":["React","useState","useEffect","useMemo","axios","useHistory","City","Home","history","weatherData","setWeatherData","city","setCity","get","process","env","REACT_APP_WEATHER_API","then","response","weather","data","catch","error","console","warn","searchParams","location","search","urlParams","URLSearchParams","currentTemp","Math","round","main","temp"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,OAArC,QAAoD,OAApD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CAEA;AACA;;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACZ,QAAMC,OAAO,GAAGH,UAAU,EAA1B;AAEA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,SAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CACAS,GADL,CAES,qDAAoDF,IAAK,uBAAsBG,OAAO,CAACC,GAAR,CAAYC,qBAAsB,EAF1H,EAIKC,IAJL,CAIU,UAASC,QAAT,EAAmB;AACrB;AACA,YAAMC,OAAO,GAAGD,QAAQ,CAACE,IAAzB;AACAV,MAAAA,cAAc,CAACS,OAAD,CAAd;AACH,KARL,EASKE,KATL,CASW,UAASC,KAAT,EAAgB;AACnB;AACAC,MAAAA,OAAO,CAACC,IAAR,CAAaF,KAAb;AACH,KAZL;AAaH,GAdQ,EAcN,CAACX,IAAD,CAdM,CAAT;AAgBAT,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMuB,YAAY,GAAGjB,OAAO,CAACkB,QAAR,CAAiBC,MAAtC;AACA,UAAMC,SAAS,GAAG,IAAIC,eAAJ,CAAoBJ,YAApB,CAAlB;AACA,UAAMd,IAAI,GAAGiB,SAAS,CAACf,GAAV,CAAc,MAAd,CAAb;;AACA,QAAIF,IAAJ,EAAU;AACNC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACH;AACJ,GAPQ,EAON,CAACH,OAAD,CAPM,CAAT;AASA,QAAM;AAAEsB,IAAAA;AAAF,MAAkB3B,OAAO,CAAC,MAAM;AAClC,QAAI2B,WAAW,GAAG,EAAlB;;AACA,QAAIrB,WAAJ,EAAiB;AACbqB,MAAAA,WAAW,GAAI,GAAEC,IAAI,CAACC,KAAL,CAAWvB,WAAW,CAACwB,IAAZ,CAAiBC,IAA5B,CAAkC,IAAnD;AACH;;AACD,WAAO;AACHJ,MAAAA;AADG,KAAP;AAGH,GAR8B,EAQ5B,CAACrB,WAAD,CAR4B,CAA/B;AAUA;AAAA;AACI;AACA;AACI,MAAA,SAAS,EAAG,0CADhB;AAAA,8BAEA,QACA,IADA;AACK,QAAA,QAAQ,EAAKE,IADlB;AAEA,QAAA,IAAI,EAAKmB,WAFT;AAGA,QAAA,KAAK,EAAK;AAHV;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAWH;;GApDQvB,I;UACWF,U;;;KADXE,I;AAsDT,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// import Header from \"../components/Header\";\r\n// import WeatherImage from \"../components/WeatherImage\";\r\n\r\nimport City from \"../components/City\";\r\n\r\nfunction Home() {\r\n    const history = useHistory();\r\n\r\n    const [weatherData, setWeatherData] = useState(null);\r\n    const [city, setCity] = useState(\"Jakarta\");\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(\r\n                `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${process.env.REACT_APP_WEATHER_API}`\r\n            )\r\n            .then(function(response) {\r\n                // Successful request\r\n                const weather = response.data;\r\n                setWeatherData(weather);\r\n            })\r\n            .catch(function(error) {\r\n                // The best practice of coding is to not use console.log\r\n                console.warn(error);\r\n            });\r\n    }, [city]);\r\n\r\n    useEffect(() => {\r\n        const searchParams = history.location.search;\r\n        const urlParams = new URLSearchParams(searchParams);\r\n        const city = urlParams.get(\"city\");\r\n        if (city) {\r\n            setCity(city);\r\n        }\r\n    }, [history]);\r\n\r\n    const { currentTemp } = useMemo(() => {\r\n        let currentTemp = \"\";\r\n        if (weatherData) {\r\n            currentTemp = `${Math.round(weatherData.main.temp)}°C`;\r\n        }\r\n        return {\r\n            currentTemp,\r\n        };\r\n    }, [weatherData]);\r\n\r\n    return (\r\n        // Container\r\n        <\r\n        div className = \"flex flex-col h-screen bg-green-200 font\" >\r\n        <\r\n        City cityName = { city }\r\n        temp = { currentTemp }\r\n        color = { \"bg-yellow-500\" }\r\n        /> <\r\n        /div>\r\n    );\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}