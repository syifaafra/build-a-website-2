{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ZUL\\\\Desktop\\\\syifaProject\\\\build-a-website-2\\\\src\\\\containers\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"../components/Header\";\nimport WeatherImage from \"../components/WeatherImage\";\nimport City from \"../components/City\";\n\nfunction Home() {\n  _s();\n\n  const history = useHistory();\n  const [weatherData, setWeatherData] = useState(null);\n  const [city, setCity] = useState(\"Jakarta\");\n  const [cities, setCities] = useState([{\n    name: \"Jakarta\",\n    currentTemp: \"0\",\n    color: \"bg-yellow-500\"\n  }, {\n    name: \"Bandung\",\n    currentTemp: \"0\",\n    color: \"bg-red-500\"\n  }, {\n    name: \"Malang\",\n    currentTemp: \"0\",\n    color: \"bg-blue-500\"\n  }]);\n  useEffect(() => {\n    // console.log(process.env.REACT_APP_WEATHER_KEY);\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${process.env.REACT_APP_WEATHER_KEY}`).then(function (response) {\n      // Successful request\n      const weather = response.data;\n      setWeatherData(weather);\n    }).catch(function (error) {\n      // The best practice of coding is to not use console.log\n      console.log(error);\n    });\n  }, [city]);\n  useEffect(() => {\n    const searchParams = history.location.search;\n    const urlParams = new URLSearchParams(searchParams);\n    const city = urlParams.get(\"city\");\n\n    if (city) {\n      setCity(city);\n    }\n  }, [history]);\n  const {\n    currentTemp\n  } = useMemo(() => {\n    let currentTemp = \"\";\n\n    if (weatherData) {\n      currentTemp = `${Math.round(weatherData.main.temp)}°C`;\n    }\n\n    return {\n      currentTemp\n    };\n  }, [weatherData]);\n  return (\n    /*#__PURE__*/\n    // Container\n    _jsxDEV(\"div\", {\n      className: \"flex flex-col h-screen bg-green-200\",\n      children: [\" \", cities.map((item, index) => /*#__PURE__*/_jsxDEV(City, {\n        cityName: item.name,\n        temp: item.currentTemp,\n        color: item.color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 43\n      }, this)), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(Home, \"IOFoaFWsp06wK2hrYRAV4aDfKFE=\", false, function () {\n  return [useHistory];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/ZUL/Desktop/syifaProject/build-a-website-2/src/containers/Home.js"],"names":["React","useState","useEffect","useMemo","axios","useHistory","Header","WeatherImage","City","Home","history","weatherData","setWeatherData","city","setCity","cities","setCities","name","currentTemp","color","get","process","env","REACT_APP_WEATHER_KEY","then","response","weather","data","catch","error","console","log","searchParams","location","search","urlParams","URLSearchParams","Math","round","main","temp","map","item","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Header from \"../components/Header\";\r\nimport WeatherImage from \"../components/WeatherImage\";\r\n\r\nimport City from \"../components/City\";\r\n\r\nfunction Home() {\r\n    const history = useHistory();\r\n    const [weatherData, setWeatherData] = useState(null);\r\n    const [city, setCity] = useState(\"Jakarta\");\r\n\r\n    const [cities, setCities] = useState([{\r\n            name: \"Jakarta\",\r\n            currentTemp: \"0\",\r\n            color: \"bg-yellow-500\",\r\n        },\r\n        {\r\n            name: \"Bandung\",\r\n            currentTemp: \"0\",\r\n            color: \"bg-red-500\",\r\n        },\r\n        {\r\n            name: \"Malang\",\r\n            currentTemp: \"0\",\r\n            color: \"bg-blue-500\",\r\n        },\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        // console.log(process.env.REACT_APP_WEATHER_KEY);\r\n        axios\r\n            .get(\r\n                `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${process.env.REACT_APP_WEATHER_KEY}`\r\n            )\r\n            .then(function(response) {\r\n                // Successful request\r\n                const weather = response.data;\r\n                setWeatherData(weather);\r\n            })\r\n            .catch(function(error) {\r\n                // The best practice of coding is to not use console.log\r\n                console.log(error);\r\n            });\r\n    }, [city]);\r\n\r\n    useEffect(() => {\r\n        const searchParams = history.location.search;\r\n        const urlParams = new URLSearchParams(searchParams);\r\n        const city = urlParams.get(\"city\");\r\n        if (city) {\r\n            setCity(city);\r\n        }\r\n    }, [history]);\r\n\r\n    const { currentTemp } = useMemo(() => {\r\n        let currentTemp = \"\";\r\n        if (weatherData) {\r\n            currentTemp = `${Math.round(weatherData.main.temp)}°C`;\r\n        }\r\n        return {\r\n            currentTemp,\r\n        };\r\n    }, [weatherData]);\r\n\r\n    return (\r\n        // Container\r\n        <\r\n        div className = \"flex flex-col h-screen bg-green-200\" > {\r\n            cities.map((item, index) => ( <\r\n                City cityName = { item.name }\r\n                temp = { item.currentTemp }\r\n                color = { item.color }\r\n                />\r\n            ))\r\n        } <\r\n        /div>\r\n    );\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}